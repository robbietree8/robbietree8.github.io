<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>professional - 标签 - robbietree's blog</title><link>https://robbietree8.github.io/tags/professional/</link><description>professional - 标签 - robbietree's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 09 Aug 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://robbietree8.github.io/tags/professional/" rel="self" type="application/rss+xml"/><item><title>how to create a awesome gitlab project</title><link>https://robbietree8.github.io/posts/2019-08-09-how-to-create-a-awesome-gitlab-project/</link><pubDate>Fri, 09 Aug 2019 00:00:00 +0000</pubDate><author>作者</author><guid>https://robbietree8.github.io/posts/2019-08-09-how-to-create-a-awesome-gitlab-project/</guid><description>如何创建一个高质量高逼格的Gitlab工程项目 目录 高质量 高逼格 对自己好一点 参考 高质量 首先我们来定义一下什么是高质量，不同于美的定义（一千个读者可能有一千个哈姆雷特），对于高质量，我们可以达成一个共识。</description></item><item><title>clean coder</title><link>https://robbietree8.github.io/posts/2018-08-18-clean-coder/</link><pubDate>Sat, 18 Aug 2018 00:00:00 +0000</pubDate><author>作者</author><guid>https://robbietree8.github.io/posts/2018-08-18-clean-coder/</guid><description>代码整洁之道-程序员的职业素养书摘 专业主义意味着担当责任 要对自己的不完美负责 如果你希望自己的软件灵活可变，那就应该时常修改它！ 职业发展是你自己的事。雇主没有义务确保你在职场能够立于不败之地，也没义务培训你，送你参加各种会议或给你买各种书籍充电。这些都是你自己的事。将自己的职业发展寄希望于雇主的软件开发人员将会很惨。 如果你无法兑现承诺，那么最重要的就是尽早向你的承诺对象发出预警，越快越好，越早越好。 衡量你是否是一名专业人士的一个重要方面，便是看你是否能将调试时间尽量降到最低。 不要经受不住诱惑盲目冲刺。 为了合理使用与会者的时间，会议应当有清晰的议程，确定每个议题所花的时间，以及明确的目标。 如果收到会议邀请，无比弄清楚指定的议题是什么，每个议题花多长时间，要取得什么成果。如果得不到确切的答案，你可以礼貌拒绝。</description></item><item><title>spring cloud practice</title><link>https://robbietree8.github.io/posts/2018-07-03-spring-cloud-practice/</link><pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate><author>作者</author><guid>https://robbietree8.github.io/posts/2018-07-03-spring-cloud-practice/</guid><description>Spring Cloud整体实践 笔者在最近的工作中用到了Spring Cloud微服务整体解决方案，没有使用SC 的全部组件，只用到了网关(Zuul)，注册中心(Eureka)和配置中心(Config server)，现将方案简要说明如下
整体简化版部署图如下
首先api访问会经过load balance，再由负载均衡层将请求转发到网关，在网关层，配置了路由规则，会将api请求转发到对应的服务
网关层 使用的zuul的版本还是1.</description></item></channel></rss>