<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>firmware - 标签 - robbietree's blog</title><link>https://robbietree8.github.io/tags/firmware/</link><description>firmware - 标签 - robbietree's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 03 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://robbietree8.github.io/tags/firmware/" rel="self" type="application/rss+xml"/><item><title>利用esp32-box-3，实现摄像头实时流(rtsp版本)</title><link>https://robbietree8.github.io/posts/2024-06-26-esp32-box-3-camera-streaming-rtsp/</link><pubDate>Wed, 03 Jul 2024 00:00:00 +0000</pubDate><author>作者</author><guid>https://robbietree8.github.io/posts/2024-06-26-esp32-box-3-camera-streaming-rtsp/</guid><description>如何利用esp32-box-3，实现摄像头实时流(rtsp版本) 尝试使用典型的直播协议实现摄像头实时流，如rtmp，WebRTC，rtsp等 rtmp方案里，video codec基本要求是H.264，配置s3的编码器为H.264后，拉流过来显示异常。
又开始尝试rtsp方案，服务器尝试过zlmediakit，但是它对s3的rtsp session处理有点问题，导致rtsp握手就失败了，没办法，只能使用 easydarwin。
使用easydarwin也有一个坑，用 vlc 拉流，非常卡顿，搜索一圈后，用了IINA，问题解决。 不过 easydarwin 太久没有维护了，谨慎使用。</description></item><item><title>利用esp32-box-3，实现摄像头实时流</title><link>https://robbietree8.github.io/posts/2024-06-26-esp32-box-3-camera-streaming/</link><pubDate>Wed, 26 Jun 2024 00:00:00 +0000</pubDate><author>作者</author><guid>https://robbietree8.github.io/posts/2024-06-26-esp32-box-3-camera-streaming/</guid><description>如何利用esp32-box-3，实现摄像头实时流 firmware 摄像头捕捉到一帧的数据后，拆包后通过 udp 传送到服务端
udp receiving 接收 udp 的分包数据，按照字节头判断是否为图片，合并之后保存成 bytearray</description></item><item><title>Firmware developer guide using MicroPython</title><link>https://robbietree8.github.io/posts/2022-05-07-firmware-developer-guide-using-micropython/</link><pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://robbietree8.github.io/posts/2022-05-07-firmware-developer-guide-using-micropython/</guid><description>固件开发指北 笔者本身主业是后端开发，机缘巧合之下，需要开发一款固件，按照极客时间里的课程摸索着也做出来了，现将过程中的一些经验分享如下。
开发语言 C/C++是开发固件的首选语言， 由于python的流行以及上手简单，也有用MicroPython的 如果让我在MicroPython之外选择一门语言，我会考虑一下rust 对语言的选择需要考虑，1.生态（对流行的芯片有没有现成的库可用用），2.社区（活跃程度，遇到问题能不能解决）
开发板 esp32作为近来比较流行的一款芯片，价格比较低，功能也比较强大，集成了wifi和蓝牙，是入门的首选。
开发工具 可以在vscode里开发固件，安装Pymakr插件</description></item></channel></rss>