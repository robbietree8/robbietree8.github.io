<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - robbietree's blog</title><link>https://robbietree8.github.io/posts/</link><description>所有文章 | robbietree's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 17 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://robbietree8.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>在 postman 里批量运行 curl 命令</title><link>https://robbietree8.github.io/posts/2024-10-17-run-batch-curl-in-postman/</link><pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate><author>作者</author><guid>https://robbietree8.github.io/posts/2024-10-17-run-batch-curl-in-postman/</guid><description>在 postman 里批量运行 curl 命令 Step1 打开Chrome Dev Tools，右键点击想要执行的链接，选择Copy as cURL。</description></item><item><title>利用esp32-box-3，实现摄像头实时流(rtsp版本)</title><link>https://robbietree8.github.io/posts/2024-06-26-esp32-box-3-camera-streaming-rtsp/</link><pubDate>Wed, 03 Jul 2024 00:00:00 +0000</pubDate><author>作者</author><guid>https://robbietree8.github.io/posts/2024-06-26-esp32-box-3-camera-streaming-rtsp/</guid><description>如何利用esp32-box-3，实现摄像头实时流(rtsp版本) 尝试使用典型的直播协议实现摄像头实时流，如rtmp，WebRTC，rtsp等 rtmp方案里，video codec基本要求是H.264，配置s3的编码器为H.264后，拉流过来显示异常。
又开始尝试rtsp方案，服务器尝试过zlmediakit，但是它对s3的rtsp session处理有点问题，导致rtsp握手就失败了，没办法，只能使用 easydarwin。
使用easydarwin也有一个坑，用 vlc 拉流，非常卡顿，搜索一圈后，用了IINA，问题解决，ios 端可以使用Outplayer软件 不过 easydarwin 太久没有维护了，谨慎使用。</description></item><item><title>利用esp32-box-3，实现摄像头实时流</title><link>https://robbietree8.github.io/posts/2024-06-26-esp32-box-3-camera-streaming/</link><pubDate>Wed, 26 Jun 2024 00:00:00 +0000</pubDate><author>作者</author><guid>https://robbietree8.github.io/posts/2024-06-26-esp32-box-3-camera-streaming/</guid><description>如何利用esp32-box-3，实现摄像头实时流 firmware 摄像头捕捉到一帧的数据后，拆包后通过 udp 传送到服务端
udp receiving 接收 udp 的分包数据，按照字节头判断是否为图片，合并之后保存成 bytearray</description></item><item><title>performance test using k8s</title><link>https://robbietree8.github.io/posts/2022-08-29-pts-using-k8s/</link><pubDate>Mon, 29 Aug 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://robbietree8.github.io/posts/2022-08-29-pts-using-k8s/</guid><description>在k8s里做性能测试 整体架构 其中:
jmeter-k8s-job
以docker-jmeter为基础镜像，运行jmx脚本即可
使用了这个插件
influxdb2
使用的是2.4.0版本，按照官方文档部署即可
grafana
使用的是9.1.1版本，按照官方文档部署即可</description></item><item><title>docker tips</title><link>https://robbietree8.github.io/posts/2022-06-24-docker-tips/</link><pubDate>Fri, 24 Jun 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://robbietree8.github.io/posts/2022-06-24-docker-tips/</guid><description>tips docker容器内怎么连接本机数据库 使用host.docker.internal</description></item><item><title>Firmware developer guide using MicroPython</title><link>https://robbietree8.github.io/posts/2022-05-07-firmware-developer-guide-using-micropython/</link><pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://robbietree8.github.io/posts/2022-05-07-firmware-developer-guide-using-micropython/</guid><description>固件开发指北 笔者本身主业是后端开发，机缘巧合之下，需要开发一款固件，按照极客时间里的课程摸索着也做出来了，现将过程中的一些经验分享如下。
开发语言 C/C++是开发固件的首选语言， 由于python的流行以及上手简单，也有用MicroPython的 如果让我在MicroPython之外选择一门语言，我会考虑一下rust 对语言的选择需要考虑，1.生态（对流行的芯片有没有现成的库可用用），2.社区（活跃程度，遇到问题能不能解决）
开发板 esp32作为近来比较流行的一款芯片，价格比较低，功能也比较强大，集成了wifi和蓝牙，是入门的首选。
开发工具 可以在vscode里开发固件，安装Pymakr插件</description></item><item><title>Running mock server in local</title><link>https://robbietree8.github.io/posts/2022-04-14-local-mock-server/</link><pubDate>Thu, 14 Apr 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://robbietree8.github.io/posts/2022-04-14-local-mock-server/</guid><description>Running local mock server Motivation 我的服务依赖一个外部服务，当我想要测试我的服务的时候，我希望可以不去启动这个外部服务。
Solution moco提供了一种能力，让你可以通过json描述请求和响应，只需要执行standalone的程序即可启动mock服务。 具体如下:
首先从官网下载standalone的jar包，在同目录下，编写json文件，比如</description></item><item><title>Mind map for ES6 tutorial</title><link>https://robbietree8.github.io/posts/2022-04-07-es6/</link><pubDate>Thu, 07 Apr 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://robbietree8.github.io/posts/2022-04-07-es6/</guid><description>ES6教程脑图 参考 ES6 教程</description></item><item><title>对COLA的理解</title><link>https://robbietree8.github.io/posts/2022-01-21-cola-understanding/</link><pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://robbietree8.github.io/posts/2022-01-21-cola-understanding/</guid><description>一些问题
外部输入是怎么转换为内部的模型的 外部输入定义在client模块dto包 对外的API是如何设计的，包括code, message的设计 关键字段: success, errCode, errMessage 外部服务是如何隔离的 domain层定义接口，infrastructure层负责实现 它是怎么分层、分包的 先看domain，再看app 先领域分包，后功能分包 包的定义(摘自https://blog.</description></item><item><title>nginx 504</title><link>https://robbietree8.github.io/posts/2022-01-18-nginx-504-in-k8s/</link><pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate><author>作者</author><guid>https://robbietree8.github.io/posts/2022-01-18-nginx-504-in-k8s/</guid><description>nginx 504 后端由nginx代理，处理时长超过60秒的时候，nginx侧报504错误，后修改nginx配置后，运行正常。
关键配置是
nginx.ingress.kubernetes.io/proxy-send-timeout nginx.ingress.kubernetes.io/proxy-read-timeout 参考 k8s-custom-timeouts</description></item></channel></rss>